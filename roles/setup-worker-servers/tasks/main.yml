#SPDX-License-Identifier: MIT-0
---
# tasks file for initial-worker-server

- name: Update and upgrade apt packages
  apt:
    update_cache: yes
    upgrade: yes

- name: Install jq if not present
  ansible.builtin.apt:
    name: jq
    state: present
  when: ansible_facts.packages['jq'] is not defined

- name: Setup virtual venv
  ansible.builtin.include_tasks:
    file: venv_with_dep.yml

- name: Change hostname
  ansible.builtin.include_tasks:
    file: change_hostname.yml

- name: Create xray user
  ansible.builtin.include_tasks:
    file: create_xray_user.yml

- name: Change root password block
  ansible.builtin.include_tasks:
    file: change_root_password.yml

- name: Change ssh port block
  ansible.builtin.include_tasks:
    file: change_ssh_port.yml

- name: Generate ssh key and save
  ansible.builtin.include_tasks:
    file: create_ssh_connect.yml

- name: Initialize all_servers_data
  ansible.builtin.set_fact:
    all_servers_data: {}

- name: Gather information about the server
  ansible.builtin.set_fact:
    server_data:
      root_password: "{{ new_root_password }}"
      ssh_port: "{{ new_ssh_port }}"
      current_hostname: "{{ current_hostname }}"
      xray_password: "{{ new_xray_password }}"

- name: Collect data from all servers into a shared variable on the control node
  delegate_to: localhost
  run_once: true
  ansible.builtin.set_fact:
    all_servers_data: "{{ all_servers_data | default({}) | combine({inventory_hostname: server_data}) }}"

- name: Append data from other hosts
  delegate_to: localhost
  run_once: true
  ansible.builtin.set_fact:
    all_servers_data: "{{ all_servers_data | combine({item: hostvars[item].server_data | default({})}) }}"
  loop: "{{ ansible_play_hosts }}"
  vars:
    item: "{{ inventory_hostname }}"

- name: Save all servers data to a JSON file on the control node
  run_once: true
  delegate_to: localhost
  copy:
    content: "{{ all_servers_data | to_nice_json }}"
    dest: "/home/bakvivas/Documents/Projects/xray-vless-reality-bot/test.json"