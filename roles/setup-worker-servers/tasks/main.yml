#SPDX-License-Identifier: MIT-0
---
# tasks file for initial-worker-server


#- name: Update all packages to their latest version
#  ansible.builtin.apt:
#    name: "*"
#    state: latest

- name: Install requirements packages
  ansible.builtin.apt:
    pkg:
      - python3
      - python3-pip
      - python3-venv
    state: present

- name: Save root password
  ansible.builtin.set_fact:
    root_password: "{{ ansible_password }}"

- name: Debug
  ansible.builtin.debug:
    msg: "{{ root_password }}"

- name: Generate root password
  ansible.builtin.set_fact:
    new_root_password: "{{ lookup('password', '/dev/null', length=20, chars=['ascii_letters', 'digits', 'punctuation']) }}"

- name: Debug root password
  ansible.builtin.debug:
    msg: "new root password {{ new_root_password }}"

- name: Create virtualenv for python for basic commands
  ansible.builtin.command:
    cmd: python3 -m venv {{ venv_directory }}

- name: Install passlib in the virtual environment
  ansible.builtin.pip:
    name: passlib
    virtualenv: "{{ venv_directory }}"
    state: latest

- name: Hash root password
  ansible.builtin.command:
    cmd: "{{ venv_directory }}/bin/python -c 'from passlib.hash import sha512_crypt; print(sha512_crypt.hash(\"{{ new_root_password }}\"))'"
  register: hashed_password_output

- name: Set hashed password
  ansible.builtin.set_fact:
    new_hashed_password: "{{ hashed_password_output.stdout }}"

- name: Debug root password
  ansible.builtin.debug:
    msg: "hashed password {{ new_hashed_password }}"

- name: Change root password
  ansible.builtin.user:
    name: root
    password: "{{ new_hashed_password }}"
    update_password: always
  register: password_change_result

- name: Set flag if password change was successful
  ansible.builtin.set_fact:
    root_password: "{{ new_root_password }}"
  when: password_change_result.changed

- name: Gather information about the server
  ansible.builtin.set_fact:
    server_data: "{{ {
      'root_password': root_password
    } | to_json }}"

- name: Add server data to the list
  ansible.builtin.set_fact:
    all_servers_data: "{{ all_servers_data | default([]) + [server_data] }}"

- name: debag all_servers_data
  ansible.builtin.debug:
    msg: "all_servers_data: {{ all_servers_data }}"
