#SPDX-License-Identifier: MIT-0
---
# tasks file for stub-sites

- name: Install Nginx
  ansible.builtin.package:
    name: nginx
    state: present

# - name: Generate a private key
#   openssl_privatekey:
#     path: /etc/ssl/private/stub_site.pem
#     size: 4096
#     state: present
#     cipher: sha512

# - name: Create CSR
#   openssl_csr:
#     path: /etc/ssl/stub_site.csr
#     privatekey_path: /etc/ssl/private/stub_site.pem

# - name: Generate a Self Signed OpenSSL certificate
#   openssl_certificate:
#     path: /etc/ssl/certs/stub_site.crt
#     privatekey_path: /etc/ssl/private/stub_site.pem
#     csr_path: /etc/ssl/stub_site.csr
#     provider: selfsigned
#     selfsigned_digest: sha512
#     state: present

- name: Copy basic nginx conf on remote server
  ansible.builtin.copy:
    src: "nginx.conf"
    dest: "/etc/nginx/nginx.conf"
    owner: root
    group: root
    mode: '0644'
    force: true
#  become: true
#  become_user: root
#  become_method: sudo
#  vars:
#    ansible_become_password: "{{ new_root_password }}"

- name: Substitute ip in nginx.conf
  ansible.builtin.lineinfile:
    path: "/etc/nginx/nginx.conf"
    regexp: "^ *server_name *IP *;"
    line: "server_name {{ ansible_host }};"

# - name: Restart nginx to apply changes
#   ansible.builtin.service:
#     name: nginx
#     state: restarted

#- name: Fetch country information based on IP
#  ansible.builtin.uri:
#    url: "http://ipinfo.io/{{ ansible_host }}/json"
#    return_content: yes
#  register: geoip_info

- name: Get country code from GeoIP response using jq
  ansible.builtin.shell: |
    curl -s http://ipinfo.io/{{ ansible_host }}/json | jq -r '.country'
  register: country_code

- name: Set country_code variable
  ansible.builtin.set_fact:
    country_code: "{{ country_code.stdout }}"

- name: Debug country code (for verification)
  ansible.builtin.debug:
    msg: "Detected country code: {{ country_code}}"

- name: Define supported countries
  ansible.builtin.set_fact:
    supported_countries: ["US", "FR"]

- name: Set default country code if not found
  ansible.builtin.set_fact:
    country_code: "US"
  when: country_code not in supported_countries

- name: Debug country code (for verification)
  ansible.builtin.debug:
    msg: "Detected country code: {{ country_code}}"

- name: Copy country-specific site to the server
  ansible.builtin.copy:
    src: "stub_sites/{{ country_code }}/"
    dest: "/var/www/html/"
    owner: www-data
    group: www-data
    mode: '0755'

- name: Restart nginx to apply changes
  ansible.builtin.service:
    name: nginx
    state: restarted